---
title: "How to setup a Quarto blog with gh-pages"
author: "matthias berger"
date-modified: "`r Sys.Date()`"
categories: [howto]
---

![](images/image-193588858.png){fig-alt="\"Starting a Quarto blog\" prompt on https://stablediffusionweb.com/#demo"}

This is the first post in my Quarto blog. And since I do not know how to setup my gh-pages with it, I just write about how I find out.

## Setup a Quarto Blog template

First things first. I am using RStudio's "Create Project"-dialog to use the "Quarto Blog" template. Let the screenshots speak for themselves:

|                                                                           |                                                                           |
|---------------------------------------------------------------------------|---------------------------------------------------------------------------|
| ![](images/Bildschirmfoto%20vom%202023-01-30%2021-02-08.png){width="640"} | ![](images/Bildschirmfoto%20vom%202023-01-30%2021-03-02.png){width="640"} |

## Deploying using GitHub Actions

Starting from [here](https://quarto.org/docs/publishing/github-pages.html "https://quarto.org/docs/publishing/github-pages.html"), I decide to take route number 3 (Use a [GitHub Action](https://quarto.org/docs/publishing/github-pages.html#github-action) to automatically render your files).

As recommended, I add the `/_site/` directory to my `.gitignore` file.

Then, in order to keep code only executing locally, freeze the computation

``` {.yaml filename="_quarto.yml"}
execute:
  freeze: auto
```

Next, I create a file named `publish.yml`

``` {.yaml filename=".github/workflows/publish.yml"}
on:
  workflow_dispatch:
  push:
    branches: main

name: Quarto Publish

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Render and Publish
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
```

Now, I check everything into my git repository and push to github. gh-pages should be initialized and I am ready to go.

As described [here](https://gist.github.com/Z3tt/3dab3535007acf108391649766409421 "https://gist.github.com/Z3tt/3dab3535007acf108391649766409421") I use `{usethis}` to initialize my github credentials, so first I have to install the package:

```{r}
#| eval: false
install.packages("usethis")
```

```{r}
#| eval: false
credentials::set_github_pat() # and enter your PAT
```

If you don't have a PAT, follow the instructions in the link above. To store the token permanently, use the .Renviron file of your project. `r usethis::edit_r_environ(scope = "project")`

It is really easy! But I don't know why, I had to create the branch `gh-pages` on the remote manually to make the build-job work. Before github actions were failing with a error hinting to a missing `_publish.yml`. [Here](https://github.com/quarto-dev/quarto-cli/issues/3147 "https://github.com/quarto-dev/quarto-cli/issues/3147") I found out about the missing branch.
